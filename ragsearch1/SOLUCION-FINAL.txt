═══════════════════════════════════════════════════════════════════
🚀 RAGSearch1 - SOLUCIÓN DEFINITIVA DE INSTALACIÓN
═══════════════════════════════════════════════════════════════════

PROBLEMA ENCONTRADO:
- Python 3.12 REQUIERE usar entornos virtuales (venv)
- python3-venv NO está instalado correctamente
- Se necesita instalar python3.12-venv con sudo

═══════════════════════════════════════════════════════════════════
✅ SOLUCIÓN: EJECUTA ESTO EN TU TERMINAL
═══════════════════════════════════════════════════════════════════

Copia y pega estos comandos UNO POR UNO en tu terminal WSL2:

──────────────────────────────────────────────────────────────────
COMANDO 1: Instalar python3.12-venv (REQUIERE CONTRASEÑA)
──────────────────────────────────────────────────────────────────

sudo apt update && sudo apt install -y python3.12-venv python3-pip

📝 Te pedirá tu contraseña de WSL2

──────────────────────────────────────────────────────────────────
COMANDO 2: Navegar al directorio
──────────────────────────────────────────────────────────────────

cd /home/usermario/Desktop/reme-lat-usa/ragsearch1

──────────────────────────────────────────────────────────────────
COMANDO 3: Crear entorno virtual
──────────────────────────────────────────────────────────────────

python3 -m venv venv

──────────────────────────────────────────────────────────────────
COMANDO 4: Activar entorno
──────────────────────────────────────────────────────────────────

source venv/bin/activate

Verás (venv) al inicio de tu prompt

──────────────────────────────────────────────────────────────────
COMANDO 5: Instalar dependencias (ESPERA 2-3 MINUTOS)
──────────────────────────────────────────────────────────────────

pip install --upgrade pip
pip install -r requirements.txt

──────────────────────────────────────────────────────────────────
COMANDO 6: Configurar .env
──────────────────────────────────────────────────────────────────

cp .env.example .env
sed -i 's/POSTGRES_HOST=postgres/POSTGRES_HOST=localhost/' .env
sed -i 's/REDIS_HOST=redis/REDIS_HOST=localhost/' .env
sed -i 's/CHROMA_HOST=chromadb/CHROMA_HOST=localhost/' .env
sed -i 's/ENVIRONMENT=production/ENVIRONMENT=development/' .env

──────────────────────────────────────────────────────────────────
COMANDO 7: Generar SECRET_KEY
──────────────────────────────────────────────────────────────────

SECRET_KEY=$(python3 -c "import secrets; print(secrets.token_hex(32))")
sed -i "s/SECRET_KEY=your-secret-key-here/SECRET_KEY=${SECRET_KEY}/" .env

──────────────────────────────────────────────────────────────────
COMANDO 8: Crear directorios
──────────────────────────────────────────────────────────────────

mkdir -p data/chromadb logs backups

──────────────────────────────────────────────────────────────────
COMANDO 9: Editar .env y agregar OpenAI API Key
──────────────────────────────────────────────────────────────────

nano .env

Busca la línea:
  OPENAI_API_KEY=sk-your-openai-api-key-here

Cámbiala por:
  OPENAI_API_KEY=sk-TU-KEY-AQUI

Guarda con: Ctrl+O, Enter, Ctrl+X

📝 Obtener key en: https://platform.openai.com/api-keys

──────────────────────────────────────────────────────────────────
COMANDO 10: Iniciar RAGSearch1
──────────────────────────────────────────────────────────────────

# Asegúrate que venv esté activado (verás (venv) en el prompt)
source venv/bin/activate

# Iniciar ChromaDB en background
nohup chroma run --path ./data/chromadb --port 8001 > logs/chromadb.log 2>&1 &

# Esperar 2 segundos
sleep 2

# Iniciar API
uvicorn api.main:app --reload --host 0.0.0.0 --port 8000

═══════════════════════════════════════════════════════════════════
✅ VERIFICAR QUE FUNCIONA
═══════════════════════════════════════════════════════════════════

En OTRA terminal (mientras el servidor corre), ejecuta:

curl http://localhost:8000/health

Deberías ver:
{
  "status": "healthy",
  "app": "RAGSearch1",
  "version": "1.0.0",
  "environment": "development"
}

═══════════════════════════════════════════════════════════════════
🌐 URLs DISPONIBLES
═══════════════════════════════════════════════════════════════════

• API:    http://localhost:8000
• Docs:   http://localhost:8000/docs  ← Abre esto en tu navegador
• Health: http://localhost:8000/health

═══════════════════════════════════════════════════════════════════
📚 PARA INICIAR EN EL FUTURO
═══════════════════════════════════════════════════════════════════

cd /home/usermario/Desktop/reme-lat-usa/ragsearch1
source venv/bin/activate
nohup chroma run --path ./data/chromadb --port 8001 > logs/chromadb.log 2>&1 &
uvicorn api.main:app --reload --host 0.0.0.0 --port 8000

═══════════════════════════════════════════════════════════════════
🧪 PROBAR EL SISTEMA
═══════════════════════════════════════════════════════════════════

Después de iniciar, en otra terminal:

# 1. Health check
curl http://localhost:8000/health

# 2. Búsqueda
curl -X POST http://localhost:8000/api/v1/search \
  -H "Content-Type: application/json" \
  -d '{"query": "exchanges en México", "limit": 5}'

# 3. Tasas Venezuela
curl http://localhost:8000/api/v1/bcv/rates

# 4. Trigger colección de datos
curl -X POST http://localhost:8000/api/v1/admin/collection/run

═══════════════════════════════════════════════════════════════════
❓ TROUBLESHOOTING
═══════════════════════════════════════════════════════════════════

ERROR: "python3-venv not found"
→ sudo apt install python3.12-venv

ERROR: "OPENAI_API_KEY required"
→ nano .env
→ Agrega tu key

ERROR: "Port 8000 already in use"
→ pkill -f uvicorn
→ Reinicia

ERROR: "chroma command not found"
→ pip install chromadb

═══════════════════════════════════════════════════════════════════
📞 SI ALGO FALLA
═══════════════════════════════════════════════════════════════════

1. Verifica que venv esté activado: source venv/bin/activate
2. Revisa logs: cat logs/chromadb.log
3. Verifica .env: cat .env | grep OPENAI_API_KEY
4. Reinstala dependencias: pip install -r requirements.txt

═══════════════════════════════════════════════════════════════════

¡RESUMEN DE COMANDOS COMPLETO!

sudo apt update && sudo apt install -y python3.12-venv python3-pip
cd /home/usermario/Desktop/reme-lat-usa/ragsearch1
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
cp .env.example .env
sed -i 's/POSTGRES_HOST=postgres/POSTGRES_HOST=localhost/' .env
sed -i 's/REDIS_HOST=redis/REDIS_HOST=localhost/' .env
sed -i 's/CHROMA_HOST=chromadb/CHROMA_HOST=localhost/' .env
sed -i 's/ENVIRONMENT=production/ENVIRONMENT=development/' .env
SECRET_KEY=$(python3 -c "import secrets; print(secrets.token_hex(32))")
sed -i "s/SECRET_KEY=your-secret-key-here/SECRET_KEY=${SECRET_KEY}/" .env
mkdir -p data/chromadb logs backups
nano .env  # Agregar OPENAI_API_KEY
nohup chroma run --path ./data/chromadb --port 8001 > logs/chromadb.log 2>&1 &
sleep 2
uvicorn api.main:app --reload --host 0.0.0.0 --port 8000

═══════════════════════════════════════════════════════════════════

¡Listo! 🎉
